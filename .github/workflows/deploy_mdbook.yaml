# SPDX-FileCopyrightText: 2023 - 2025 Ali Sajid Imami
#
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

---
name: Book Deployment
on:
  workflow_call:
    outputs:
      deployment_url:
        description: "The vercel deployment url of the book"
        value: ${{ jobs.deploy_book.outputs.deployment_url }}

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT_GITHUB }}
  BRANCH: ${{ github.ref_name }}

jobs:
  build_book:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - name: Checkout the Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install mdbook
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2
        with:
          experimental: true
          mise_toml: |
            [tools]
            "cargo:mdbook" = "0.4.45"
            "cargo:mdbook-inline-highlighting" = "0.1.0"

      - name: Build the Book
        run: mdbook build guide

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: book
          path: guide/book
          retention-days: 1
          compression-level: 9

  deploy_book:
    runs-on: ubuntu-latest
    needs: [build_book]
    env:
      PROJECT_ENVIRONMENT: ''
      STORE_PATH: ''
    outputs:
      deployment_url: ${{ steps.output_deployment_url.outputs.deployment_url }}

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - name: Decide Deployment Environment
        id: deployment_environment
        run: |
          if [[ ${{ env.BRANCH }} == "main" ]]; then
            echo "PROJECT_ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "PROJECT_ENVIRONMENT=preview" >> $GITHUB_ENV
          fi

      - name: Download artifact
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: book
          path: /opt/book

      - name: Install mise-en-place
        uses: jdx/mise-action@5083fe46898c414b2475087cc79da59e7da859e8 # v2
        with:
          experimental: true
          mise_toml: |
            [tools]
            node = "22"
            "npm:vercel" = "latest"

      - name: Populate Vercel Variables
        run: vercel pull --cwd /opt/book --yes --environment=${{env.PROJECT_ENVIRONMENT}} --token=${{ env.VERCEL_TOKEN }}

      - name: Build for Vercel deployment -- Preview
        if: env.PROJECT_ENVIRONMENT == 'preview'
        run: vercel build --cwd /opt/book -y -d --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy to Vercel -- Preview
        if: env.PROJECT_ENVIRONMENT == 'preview'
        run: vercel deploy --cwd /opt/book --prebuilt --token=${{ env.VERCEL_TOKEN }} > deployment_url

      - name: Build for Vercel deployment -- Production
        if: env.PROJECT_ENVIRONMENT == 'production'
        run: vercel build --cwd /opt/book -y --prod -d --token=${{ env.VERCEL_TOKEN }}

      - name: Deploy to Vercel -- Production
        if: env.PROJECT_ENVIRONMENT == 'production'
        run: vercel deploy --cwd /opt/book --prod --prebuilt --token=${{ env.VERCEL_TOKEN }} > deployment_url

      - name: Output Deployment URL
        id: output_deployment_url
        run: echo "deployment_url=$(cat deployment_url)" >> $GITHUB_OUTPUT
